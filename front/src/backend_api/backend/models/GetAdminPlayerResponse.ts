/* tslint:disable */
/* eslint-disable */
/**
 * USKB Tournament
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Player } from './Player';
import {
    PlayerFromJSON,
    PlayerFromJSONTyped,
    PlayerToJSON,
    PlayerToJSONTyped,
} from './Player';
import type { EntryWithCategory } from './EntryWithCategory';
import {
    EntryWithCategoryFromJSON,
    EntryWithCategoryFromJSONTyped,
    EntryWithCategoryToJSON,
    EntryWithCategoryToJSONTyped,
} from './EntryWithCategory';

/**
 * 
 * @export
 * @interface GetAdminPlayerResponse
 */
export interface GetAdminPlayerResponse {
    /**
     * 
     * @type {Player}
     * @memberof GetAdminPlayerResponse
     */
    player: Player;
    /**
     * 
     * @type {Array<EntryWithCategory>}
     * @memberof GetAdminPlayerResponse
     */
    entries: Array<EntryWithCategory>;
    /**
     * 
     * @type {boolean}
     * @memberof GetAdminPlayerResponse
     */
    isPlayerFromDb: boolean;
}

/**
 * Check if a given object implements the GetAdminPlayerResponse interface.
 */
export function instanceOfGetAdminPlayerResponse(value: object): value is GetAdminPlayerResponse {
    if (!('player' in value) || value['player'] === undefined) return false;
    if (!('entries' in value) || value['entries'] === undefined) return false;
    if (!('isPlayerFromDb' in value) || value['isPlayerFromDb'] === undefined) return false;
    return true;
}

export function GetAdminPlayerResponseFromJSON(json: any): GetAdminPlayerResponse {
    return GetAdminPlayerResponseFromJSONTyped(json, false);
}

export function GetAdminPlayerResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAdminPlayerResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'player': PlayerFromJSON(json['player']),
        'entries': ((json['entries'] as Array<any>).map(EntryWithCategoryFromJSON)),
        'isPlayerFromDb': json['isPlayerFromDb'],
    };
}

export function GetAdminPlayerResponseToJSON(json: any): GetAdminPlayerResponse {
    return GetAdminPlayerResponseToJSONTyped(json, false);
}

export function GetAdminPlayerResponseToJSONTyped(value?: GetAdminPlayerResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'player': PlayerToJSON(value['player']),
        'entries': ((value['entries'] as Array<any>).map(EntryWithCategoryToJSON)),
        'isPlayerFromDb': value['isPlayerFromDb'],
    };
}

