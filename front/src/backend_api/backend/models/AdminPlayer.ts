/* tslint:disable */
/* eslint-disable */
/**
 * USKB Tournament
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Gender } from './Gender';
import {
    GenderFromJSON,
    GenderFromJSONTyped,
    GenderToJSON,
    GenderToJSONTyped,
} from './Gender';

/**
 * 
 * @export
 * @interface AdminPlayer
 */
export interface AdminPlayer {
    /**
     * 
     * @type {string}
     * @memberof AdminPlayer
     */
    licenceNo: string;
    /**
     * 
     * @type {string}
     * @memberof AdminPlayer
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof AdminPlayer
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof AdminPlayer
     */
    club: string;
    /**
     * 
     * @type {Gender}
     * @memberof AdminPlayer
     */
    gender: Gender;
    /**
     * 
     * @type {number}
     * @memberof AdminPlayer
     */
    nbPoints: number;
    /**
     * 
     * @type {number}
     * @memberof AdminPlayer
     */
    bibNo?: number | null;
    /**
     * 
     * @type {string}
     * @memberof AdminPlayer
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof AdminPlayer
     */
    phone: string | null;
    /**
     * 
     * @type {number}
     * @memberof AdminPlayer
     */
    totalActualPaid: number | null;
    /**
     * 
     * @type {number}
     * @memberof AdminPlayer
     */
    remainingAmount: number;
}



/**
 * Check if a given object implements the AdminPlayer interface.
 */
export function instanceOfAdminPlayer(value: object): value is AdminPlayer {
    if (!('licenceNo' in value) || value['licenceNo'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('club' in value) || value['club'] === undefined) return false;
    if (!('gender' in value) || value['gender'] === undefined) return false;
    if (!('nbPoints' in value) || value['nbPoints'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('phone' in value) || value['phone'] === undefined) return false;
    if (!('totalActualPaid' in value) || value['totalActualPaid'] === undefined) return false;
    if (!('remainingAmount' in value) || value['remainingAmount'] === undefined) return false;
    return true;
}

export function AdminPlayerFromJSON(json: any): AdminPlayer {
    return AdminPlayerFromJSONTyped(json, false);
}

export function AdminPlayerFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminPlayer {
    if (json == null) {
        return json;
    }
    return {
        
        'licenceNo': json['licenceNo'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'club': json['club'],
        'gender': GenderFromJSON(json['gender']),
        'nbPoints': json['nbPoints'],
        'bibNo': json['bibNo'] == null ? undefined : json['bibNo'],
        'email': json['email'],
        'phone': json['phone'],
        'totalActualPaid': json['totalActualPaid'],
        'remainingAmount': json['remainingAmount'],
    };
}

export function AdminPlayerToJSON(json: any): AdminPlayer {
    return AdminPlayerToJSONTyped(json, false);
}

export function AdminPlayerToJSONTyped(value?: AdminPlayer | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'licenceNo': value['licenceNo'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'club': value['club'],
        'gender': GenderToJSON(value['gender']),
        'nbPoints': value['nbPoints'],
        'bibNo': value['bibNo'],
        'email': value['email'],
        'phone': value['phone'],
        'totalActualPaid': value['totalActualPaid'],
        'remainingAmount': value['remainingAmount'],
    };
}

